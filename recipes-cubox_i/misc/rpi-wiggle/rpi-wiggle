#!/bin/bash
###################################################################
# A Project of TNET Services, Inc
#
# Title:     rpi-wiggle
# Author:    Kevin Reed (Dweeber)
#            dweeber.dweebs@gmail.com
# Project:   Raspberry Pi Stuff
#
# Credits:   jojopi on Raspberry Pi Forum who provided sample code
#            MrEngman on Raspberry Pi Forum for testing
#            Examples from http://github.com/asb/raspi-config
#
# Copyright: Copyright (c) 2012 Kevin Reed <kreed@tnet.com>
#            https://github.com/dweeber/rpiwiggle
#
# Purpose:
# This is a simple script which looks at the current disk that is
# being used and expands the filesystem to almost the max 
# minus 3 512 blocks.  This is the ensure that the image is
# smaller than most SDcards of that size
#
# Instructions:
# Script needs to be run as root.  It is pretty much automatic... 
# it performs a resize command and setups a script which will 
# run after a reboot and then ask you to press enter to reboot.
#
# The script WILL REBOOT YOUR SYSTEM
#
# When the system is coming back up, the next command will run
# automatically, and the one time script will be removed and
# when you see the login prompt again, it will be complete
#
# CHANGELOG:
#	1.2 adapted for cubox-i e2-image ( by infiniti )
#
###################################################################
# START OF SCRIPT
###################################################################
PROGRAM="rpi-wiggle"
VERSION="v1.2 2014-09-10"
###################################################################
if [ $(id -u) -ne 0 ]; then
  printf "Script must be run as root. Try 'sudo ./rpi-wiggle'\n"
  exit 1
fi
###################################################################
DISK_SIZE="$(($(blockdev --getsz /dev/mmcblk0)/2048/925))"
PART_START="$(parted /dev/mmcblk0 -ms unit s p |grep "^2" |cut -f2 -d:| sed -e 's/s$//')"
[ "$PART_START" ] || exit 1
PART_END="$(((DISK_SIZE*925*2048-1)-1536))"

if ( > /dev/tty0 ) 2>/dev/null; then
    vtmaster=/dev/tty0
elif ( > /dev/vc/0 ) 2>/dev/null; then
    vtmaster=/dev/vc/0
elif ( > /dev/console ) 2>/dev/null; then
    vtmaster=/dev/console
else
    vtmaster=/dev/null
fi

###################################################################
# Display some Stuff...
###################################################################
echo $PROGRAM - $VERSION > $vtmaster
echo ====================================================== > $vtmaster
echo Current Disk Info > $vtmaster
fdisk -l /dev/mmcblk0 > $vtmaster
echo > $vtmaster
echo ====================================================== > $vtmaster
echo > $vtmaster
echo Calculated Info: > $vtmaster
echo " Disk Size  = $DISK_SIZE gb" > $vtmaster
echo " Part Start = $PART_START" > $vtmaster
echo " Part End   = $PART_END" > $vtmaster
echo > $vtmaster


echo "Making changes using fdisk..." > $vtmaster
printf "d\n2\nn\np\n2\n$PART_START\n$PART_END\np\nw\n" | fdisk /dev/mmcblk0
echo > $vtmaster
echo Setting up init.d resize2fs_once script > $vtmaster

cat <<\EOF > /etc/init.d/resize2fs_once &&
#!/bin/sh
### BEGIN INIT INFO
# Provides: resize2fs_once
# Required-Start:
# Required-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Run resize2fs_once on boot
# Description:
### END INIT INFO

#. /lib/lsb/init-functions

if ( > /dev/tty0 ) 2>/dev/null; then
    vtmaster=/dev/tty0
elif ( > /dev/vc/0 ) 2>/dev/null; then
    vtmaster=/dev/vc/0
elif ( > /dev/console ) 2>/dev/null; then
    vtmaster=/dev/console
else
    vtmaster=/dev/null
fi

case "$1" in
  start)
    echo "Starting resize2fs_once, THIS WILL TAKE A FEW MINUTES " > $vtmaster && 
    
    # Do our stuff....   
    resize2fs /dev/mmcblk0p2 &&
    
    # Okay, not lets remove this script
    rm /etc/init.d/resize2fs_once  &&
    rm /etc/rcS.d/S80resize2fs_once &&
    echo $?
    sync && sleep 5 && sync
    reboot
    ;;
  *)
    echo "Usage: $0 start" >&2
    exit 3
    ;;
esac
EOF
  chmod +x /etc/init.d/resize2fs_once &&
  cd /etc/rcS.d/ &&
  ln -sf ../init.d/resize2fs_once S80resize2fs_once
  opkg remove rpi-wiggle

echo > $vtmaster
echo ##################################################################### > $vtmaster
echo System is now ready to resize your system.  A REBOOT IS REQUIRED NOW! > $vtmaster
echo REBOOTING.... > $vtmaster
/bin/sync
/sbin/reboot
echo > $vtmaster
echo Script Complete... > $vtmaster

###################################################################
# END OF SCRIPT
###################################################################
